<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Border -->
    
    <Style x:Key="LayoutParent_Border" TargetType="Border">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource Primary_Brush}"/>
    </Style>

    <Style x:Key="LayoutChild_Border" TargetType="Border">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryLight_Brush}"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style x:Key="DefaultContent_All" TargetType="Control">
        <Setter Property="Background" Value="{DynamicResource PrimaryVeryLight_Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryVeryLight_Brush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
    
    <Style x:Key="Content_Border" TargetType="Border">
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <!-- Button -->

    <Style x:Key="DefaultContent_Button" TargetType="Button" BasedOn="{StaticResource DefaultContent_All}">
        
    </Style>

    <Style x:Key="IconButton_Button" TargetType="Button" BasedOn="{StaticResource DefaultContent_Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Style="{StaticResource Content_Border}">
                        <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBorderOver}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBorder}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBackgroundPressed}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBackground}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ListView -->

    <Style x:Key="DefaultContent_ListView" TargetType="ListView" BasedOn="{StaticResource DefaultContent_All}">
        <Setter Property="Background" Value="{DynamicResource PrimaryNotSoLight_Brush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryNotSoLight_Brush}"/>
    </Style>

    <Style x:Key="Generic_ListView" TargetType="ListView" BasedOn="{StaticResource DefaultContent_ListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Style="{StaticResource Content_Border}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListViewItem -->

    <Style x:Key="DefaultContent_ListViewItem" TargetType="ListViewItem" BasedOn="{StaticResource DefaultContent_All}">
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryLight_Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,1"/>
    </Style>

    <Style x:Key="Generic_ListViewItem" TargetType="ListViewItem" BasedOn="{StaticResource DefaultContent_ListViewItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Style="{StaticResource Content_Border}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBorderOver}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBorder}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <!--<Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBackgroundPressed}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                            To="{StaticResource ButtonBackground}"
                                            Duration="0:0:0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>